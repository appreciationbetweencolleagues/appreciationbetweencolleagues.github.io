{"version":3,"sources":["webpack:///../../../src/components/VThemeProvider/VThemeProvider.ts","webpack:///../../../src/components/VOverlay/VOverlay.ts","webpack:///../../../src/components/VOverlay/index.ts","webpack:///../../../src/mixins/overlayable/index.ts","webpack:///../../../src/mixins/returnable/index.ts","webpack:///../../../src/directives/click-outside/index.ts","webpack:///../../../src/components/VDialog/VDialog.ts","webpack:///../../../src/mixins/delayable/index.ts","webpack:///../../../src/mixins/stackable/index.ts","webpack:///../../../src/mixins/activatable/index.ts","webpack:///../../../src/mixins/detachable/index.ts","webpack:///../../../src/mixins/dependent/index.ts"],"names":["name","props","root","Boolean","computed","isDark","this","render","$slots","default","node","mixins","absolute","color","type","dark","opacity","Number","value","zIndex","__scrim","data","setBackgroundColor","staticClass","style","computedOpacity","$createElement","classes","themeClasses","isActive","styles","methods","genContent","children","h","class","hideOverlay","overlayColor","overlayOpacity","String","overlay","watch","genOverlay","beforeDestroy","createOverlay","propsData","parent","$el","document","requestAnimationFrame","removeOverlay","showScroll","scrollListener","e","includes","up","down","checkPath","hasScrollbar","el","Node","window","shouldScroll","delta","isInside","path","composedPath","dialog","$refs","selected","index","hideScroll","$vuetify","breakpoint","passive","returnValue","originalValue","save","setTimeout","closeConditional","directive","binding","elements","ClickOutside","inserted","onClick","app","unbind","baseMixins","directives","disabled","fullscreen","light","maxWidth","noClickAnimation","origin","persistent","retainFocus","scrollable","transition","width","activatedBy","animate","animateTimeout","stackMinZIndex","contentClasses","hasActivator","$scopedSlots","created","$attrs","hasOwnProperty","beforeMount","animateClick","target","_isDestroyed","content","contains","activeZIndex","show","bind","onClickOutside","onKeydown","getOpenDependents","activator","onFocusin","getOpenDependentElements","some","focusable","querySelectorAll","focus","showLazyContent","attrs","role","tabindex","on","keydown","ref","genTransition","appear","genInnerContent","args","include","undefined","attach","openDelay","closeDelay","openTimeout","closeTimeout","clearDelay","clearTimeout","runDelay","delay","parseInt","cb","open","close","stackElement","stackExclude","getMaxZIndex","exclude","base","zis","activeElements","Math","validator","val","internalActivator","openOnHover","activatorElement","activatorNode","events","listeners","mounted","slotType","addActivatorEvents","keys","Object","key","genActivator","genActivatorAttributes","genActivatorListeners","getActivator","length","vm","m","getContentSlot","getValueProxy","self","removeActivatorEvents","resetActivator","validateAttachTarget","contentClass","hasDetached","hasContent","Array","deactivated","console","getScopeIdAttrs","scopeId","initDetach","searchChildren","results","child","closeDependents","isDependent","openDependents","result","getClickableDependentElements"],"mappings":"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","file":"js/chunk-1e89813a.b078b8e7.js","sourcesContent":["// Mixins\nimport Themeable from '../../mixins/themeable'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default Themeable.extend({\n  name: 'v-theme-provider',\n\n  props: { root: Boolean },\n\n  computed: {\n    isDark (): boolean {\n      return this.root\n        ? this.rootIsDark\n        : Themeable.options.computed.isDark.call(this)\n    },\n  },\n\n  render (): VNode {\n    /* istanbul ignore next */\n    return (\n      this.$slots.default! &&\n      this.$slots.default!.find(node => !node.isComment && node.text !== ' ')!\n    )\n  },\n})\n","// Styles\nimport './VOverlay.sass'\n\n// Mixins\nimport Colorable from './../../mixins/colorable'\nimport Themeable from '../../mixins/themeable'\nimport Toggleable from './../../mixins/toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\n/* @vue/component */\nexport default mixins(\n  Colorable,\n  Themeable,\n  Toggleable\n).extend({\n  name: 'v-overlay',\n\n  props: {\n    absolute: Boolean,\n    color: {\n      type: String,\n      default: '#212121',\n    },\n    dark: {\n      type: Boolean,\n      default: true,\n    },\n    opacity: {\n      type: [Number, String],\n      default: 0.46,\n    },\n    value: {\n      default: true,\n    },\n    zIndex: {\n      type: [Number, String],\n      default: 5,\n    },\n  },\n\n  computed: {\n    __scrim (): VNode {\n      const data = this.setBackgroundColor(this.color, {\n        staticClass: 'v-overlay__scrim',\n        style: {\n          opacity: this.computedOpacity,\n        },\n      })\n\n      return this.$createElement('div', data)\n    },\n    classes (): object {\n      return {\n        'v-overlay--absolute': this.absolute,\n        'v-overlay--active': this.isActive,\n        ...this.themeClasses,\n      }\n    },\n    computedOpacity (): number {\n      return Number(this.isActive ? this.opacity : 0)\n    },\n    styles (): object {\n      return {\n        zIndex: this.zIndex,\n      }\n    },\n  },\n\n  methods: {\n    genContent () {\n      return this.$createElement('div', {\n        staticClass: 'v-overlay__content',\n      }, this.$slots.default)\n    },\n  },\n\n  render (h): VNode {\n    const children = [this.__scrim]\n\n    if (this.isActive) children.push(this.genContent())\n\n    return h('div', {\n      staticClass: 'v-overlay',\n      class: this.classes,\n      style: this.styles,\n    }, children)\n  },\n})\n","import VOverlay from './VOverlay'\n\nexport { VOverlay }\n\nexport default VOverlay\n","// Components\nimport VOverlay from '../../components/VOverlay'\n\n// Utilities\nimport {\n  keyCodes,\n  addOnceEventListener,\n  addPassiveEventListener,\n  getZIndex,\n} from '../../util/helpers'\n\n// Types\nimport Vue from 'vue'\n\ninterface Toggleable extends Vue {\n  isActive?: boolean\n}\n\ninterface Stackable extends Vue {\n  activeZIndex: number\n}\n\ninterface options {\n  absolute?: boolean\n  $refs: {\n    dialog?: HTMLElement\n    content?: HTMLElement\n  }\n}\n\n/* @vue/component */\nexport default Vue.extend<Vue & Toggleable & Stackable & options>().extend({\n  name: 'overlayable',\n\n  props: {\n    hideOverlay: Boolean,\n    overlayColor: String,\n    overlayOpacity: [Number, String],\n  },\n\n  data () {\n    return {\n      overlay: null as InstanceType<typeof VOverlay> | null,\n    }\n  },\n\n  watch: {\n    hideOverlay (value) {\n      if (!this.isActive) return\n\n      if (value) this.removeOverlay()\n      else this.genOverlay()\n    },\n  },\n\n  beforeDestroy () {\n    this.removeOverlay()\n  },\n\n  methods: {\n    createOverlay () {\n      const overlay = new VOverlay({\n        propsData: {\n          absolute: this.absolute,\n          value: false,\n          color: this.overlayColor,\n          opacity: this.overlayOpacity,\n        },\n      })\n\n      overlay.$mount()\n\n      const parent = this.absolute\n        ? this.$el.parentNode\n        : document.querySelector('[data-app]')\n\n      parent && parent.insertBefore(overlay.$el, parent.firstChild)\n\n      this.overlay = overlay\n    },\n    genOverlay () {\n      this.hideScroll()\n\n      if (this.hideOverlay) return\n\n      if (!this.overlay) this.createOverlay()\n\n      requestAnimationFrame(() => {\n        if (!this.overlay) return\n\n        if (this.activeZIndex !== undefined) {\n          this.overlay.zIndex = String(this.activeZIndex - 1)\n        } else if (this.$el) {\n          this.overlay.zIndex = getZIndex(this.$el)\n        }\n\n        this.overlay.value = true\n      })\n\n      return true\n    },\n    /** removeOverlay(false) will not restore the scollbar afterwards */\n    removeOverlay (showScroll = true) {\n      if (this.overlay) {\n        addOnceEventListener(this.overlay.$el, 'transitionend', () => {\n          if (\n            !this.overlay ||\n            !this.overlay.$el ||\n            !this.overlay.$el.parentNode ||\n            this.overlay.value\n          ) return\n\n          this.overlay.$el.parentNode.removeChild(this.overlay.$el)\n          this.overlay.$destroy()\n          this.overlay = null\n        })\n\n        this.overlay.value = false\n      }\n\n      showScroll && this.showScroll()\n    },\n    scrollListener (e: WheelEvent & KeyboardEvent) {\n      if (e.type === 'keydown') {\n        if (\n          ['INPUT', 'TEXTAREA', 'SELECT'].includes((e.target as Element).tagName) ||\n          // https://github.com/vuetifyjs/vuetify/issues/4715\n          (e.target as HTMLElement).isContentEditable\n        ) return\n\n        const up = [keyCodes.up, keyCodes.pageup]\n        const down = [keyCodes.down, keyCodes.pagedown]\n\n        if (up.includes(e.keyCode)) {\n          (e as any).deltaY = -1\n        } else if (down.includes(e.keyCode)) {\n          (e as any).deltaY = 1\n        } else {\n          return\n        }\n      }\n\n      if (e.target === this.overlay ||\n        (e.type !== 'keydown' && e.target === document.body) ||\n        this.checkPath(e)) e.preventDefault()\n    },\n    hasScrollbar (el?: Element) {\n      if (!el || el.nodeType !== Node.ELEMENT_NODE) return false\n\n      const style = window.getComputedStyle(el)\n      return ['auto', 'scroll'].includes(style.overflowY!) && el.scrollHeight > el.clientHeight\n    },\n    shouldScroll (el: Element, delta: number) {\n      if (el.scrollTop === 0 && delta < 0) return true\n      return el.scrollTop + el.clientHeight === el.scrollHeight && delta > 0\n    },\n    isInside (el: Element, parent: Element): boolean {\n      if (el === parent) {\n        return true\n      } else if (el === null || el === document.body) {\n        return false\n      } else {\n        return this.isInside(el.parentNode as Element, parent)\n      }\n    },\n    checkPath (e: WheelEvent) {\n      const path = e.path || this.composedPath(e)\n      const delta = e.deltaY\n\n      if (e.type === 'keydown' && path[0] === document.body) {\n        const dialog = this.$refs.dialog\n        // getSelection returns null in firefox in some edge cases, can be ignored\n        const selected = window.getSelection()!.anchorNode as Element\n        if (dialog && this.hasScrollbar(dialog) && this.isInside(selected, dialog)) {\n          return this.shouldScroll(dialog, delta)\n        }\n        return true\n      }\n\n      for (let index = 0; index < path.length; index++) {\n        const el = path[index]\n\n        if (el === document) return true\n        if (el === document.documentElement) return true\n        if (el === this.$refs.content) return true\n\n        if (this.hasScrollbar(el as Element)) return this.shouldScroll(el as Element, delta)\n      }\n\n      return true\n    },\n    /**\n     * Polyfill for Event.prototype.composedPath\n     */\n    composedPath (e: WheelEvent): EventTarget[] {\n      if (e.composedPath) return e.composedPath()\n\n      const path = []\n      let el = e.target as Element\n\n      while (el) {\n        path.push(el)\n\n        if (el.tagName === 'HTML') {\n          path.push(document)\n          path.push(window)\n\n          return path\n        }\n\n        el = el.parentElement!\n      }\n      return path\n    },\n    hideScroll () {\n      if (this.$vuetify.breakpoint.smAndDown) {\n        document.documentElement!.classList.add('overflow-y-hidden')\n      } else {\n        addPassiveEventListener(window, 'wheel', this.scrollListener as EventHandlerNonNull, { passive: false })\n        window.addEventListener('keydown', this.scrollListener as EventHandlerNonNull)\n      }\n    },\n    showScroll () {\n      document.documentElement!.classList.remove('overflow-y-hidden')\n      window.removeEventListener('wheel', this.scrollListener as EventHandlerNonNull)\n      window.removeEventListener('keydown', this.scrollListener as EventHandlerNonNull)\n    },\n  },\n})\n","import Vue from 'vue'\n\n/* @vue/component */\nexport default Vue.extend({\n  name: 'returnable',\n\n  props: {\n    returnValue: null as any,\n  },\n\n  data: () => ({\n    isActive: false,\n    originalValue: null as any,\n  }),\n\n  watch: {\n    isActive (val) {\n      if (val) {\n        this.originalValue = this.returnValue\n      } else {\n        this.$emit('update:return-value', this.originalValue)\n      }\n    },\n  },\n\n  methods: {\n    save (value: any) {\n      this.originalValue = value\n      setTimeout(() => {\n        this.isActive = false\n      })\n    },\n  },\n})\n","import { VNodeDirective } from 'vue/types/vnode'\n\ninterface ClickOutsideBindingArgs {\n  closeConditional?: (e: Event) => boolean\n  include?: () => HTMLElement[]\n}\n\ninterface ClickOutsideDirective extends VNodeDirective {\n  value?: (e: Event) => void\n  args?: ClickOutsideBindingArgs\n}\n\nfunction closeConditional () {\n  return false\n}\n\nfunction directive (e: PointerEvent, el: HTMLElement, binding: ClickOutsideDirective): void {\n  // Args may not always be supplied\n  binding.args = binding.args || {}\n\n  // If no closeConditional was supplied assign a default\n  const isActive = (binding.args.closeConditional || closeConditional)\n\n  // The include element callbacks below can be expensive\n  // so we should avoid calling them when we're not active.\n  // Explicitly check for false to allow fallback compatibility\n  // with non-toggleable components\n  if (!e || isActive(e) === false) return\n\n  // If click was triggered programmaticaly (domEl.click()) then\n  // it shouldn't be treated as click-outside\n  // Chrome/Firefox support isTrusted property\n  // IE/Edge support pointerType property (empty if not triggered\n  // by pointing device)\n  if (('isTrusted' in e && !e.isTrusted) ||\n    ('pointerType' in e && !e.pointerType)\n  ) return\n\n  // Check if additional elements were passed to be included in check\n  // (click must be outside all included elements, if any)\n  const elements = (binding.args.include || (() => []))()\n  // Add the root element for the component this directive was defined on\n  elements.push(el)\n\n  // Check if it's a click outside our elements, and then if our callback returns true.\n  // Non-toggleable components should take action in their callback and return falsy.\n  // Toggleable can return true if it wants to deactivate.\n  // Note that, because we're in the capture phase, this callback will occur before\n  // the bubbling click event on any outside elements.\n  !elements.some(el => el.contains(e.target as Node)) && setTimeout(() => {\n    isActive(e) && binding.value && binding.value(e)\n  }, 0)\n}\n\nexport const ClickOutside = {\n  // [data-app] may not be found\n  // if using bind, inserted makes\n  // sure that the root element is\n  // available, iOS does not support\n  // clicks on body\n  inserted (el: HTMLElement, binding: ClickOutsideDirective) {\n    const onClick = (e: Event) => directive(e as PointerEvent, el, binding)\n    // iOS does not recognize click events on document\n    // or body, this is the entire purpose of the v-app\n    // component and [data-app], stop removing this\n    const app = document.querySelector('[data-app]') ||\n      document.body // This is only for unit tests\n    app.addEventListener('click', onClick, true)\n    el._clickOutside = onClick\n  },\n\n  unbind (el: HTMLElement) {\n    if (!el._clickOutside) return\n\n    const app = document.querySelector('[data-app]') ||\n      document.body // This is only for unit tests\n    app && app.removeEventListener('click', el._clickOutside, true)\n    delete el._clickOutside\n  },\n}\n\nexport default ClickOutside\n","// Styles\nimport './VDialog.sass'\n\n// Components\nimport { VThemeProvider } from '../VThemeProvider'\n\n// Mixins\nimport Activatable from '../../mixins/activatable'\nimport Dependent from '../../mixins/dependent'\nimport Detachable from '../../mixins/detachable'\nimport Overlayable from '../../mixins/overlayable'\nimport Returnable from '../../mixins/returnable'\nimport Stackable from '../../mixins/stackable'\nimport Toggleable from '../../mixins/toggleable'\n\n// Directives\nimport ClickOutside from '../../directives/click-outside'\n\n// Helpers\nimport mixins from '../../util/mixins'\nimport { removed } from '../../util/console'\nimport {\n  convertToUnit,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { VNode } from 'vue'\n\nconst baseMixins = mixins(\n  Activatable,\n  Dependent,\n  Detachable,\n  Overlayable,\n  Returnable,\n  Stackable,\n  Toggleable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-dialog',\n\n  directives: { ClickOutside },\n\n  props: {\n    dark: Boolean,\n    disabled: Boolean,\n    fullscreen: Boolean,\n    light: Boolean,\n    maxWidth: {\n      type: [String, Number],\n      default: 'none',\n    },\n    noClickAnimation: Boolean,\n    origin: {\n      type: String,\n      default: 'center center',\n    },\n    persistent: Boolean,\n    retainFocus: {\n      type: Boolean,\n      default: true,\n    },\n    scrollable: Boolean,\n    transition: {\n      type: [String, Boolean],\n      default: 'dialog-transition',\n    },\n    width: {\n      type: [String, Number],\n      default: 'auto',\n    },\n  },\n\n  data () {\n    return {\n      activatedBy: null as EventTarget | null,\n      animate: false,\n      animateTimeout: -1,\n      isActive: !!this.value,\n      stackMinZIndex: 200,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        [(`v-dialog ${this.contentClass}`).trim()]: true,\n        'v-dialog--active': this.isActive,\n        'v-dialog--persistent': this.persistent,\n        'v-dialog--fullscreen': this.fullscreen,\n        'v-dialog--scrollable': this.scrollable,\n        'v-dialog--animated': this.animate,\n      }\n    },\n    contentClasses (): object {\n      return {\n        'v-dialog__content': true,\n        'v-dialog__content--active': this.isActive,\n      }\n    },\n    hasActivator (): boolean {\n      return Boolean(\n        !!this.$slots.activator ||\n        !!this.$scopedSlots.activator\n      )\n    },\n  },\n\n  watch: {\n    isActive (val) {\n      if (val) {\n        this.show()\n        this.hideScroll()\n      } else {\n        this.removeOverlay()\n        this.unbind()\n      }\n    },\n    fullscreen (val) {\n      if (!this.isActive) return\n\n      if (val) {\n        this.hideScroll()\n        this.removeOverlay(false)\n      } else {\n        this.showScroll()\n        this.genOverlay()\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('full-width')) {\n      removed('full-width', this)\n    }\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      this.isBooted = this.isActive\n      this.isActive && this.show()\n    })\n  },\n\n  beforeDestroy () {\n    if (typeof window !== 'undefined') this.unbind()\n  },\n\n  methods: {\n    animateClick () {\n      this.animate = false\n      // Needed for when clicking very fast\n      // outside of the dialog\n      this.$nextTick(() => {\n        this.animate = true\n        window.clearTimeout(this.animateTimeout)\n        this.animateTimeout = window.setTimeout(() => (this.animate = false), 150)\n      })\n    },\n    closeConditional (e: Event) {\n      const target = e.target as HTMLElement\n      // Ignore the click if the dialog is closed or destroyed,\n      // if it was on an element inside the content,\n      // if it was dragged onto the overlay (#6969),\n      // or if this isn't the topmost dialog (#9907)\n      return !(\n        this._isDestroyed ||\n        !this.isActive ||\n        this.$refs.content.contains(target) ||\n        (this.overlay && target && !this.overlay.$el.contains(target))\n      ) && this.activeZIndex >= this.getMaxZIndex()\n    },\n    hideScroll () {\n      if (this.fullscreen) {\n        document.documentElement.classList.add('overflow-y-hidden')\n      } else {\n        Overlayable.options.methods.hideScroll.call(this)\n      }\n    },\n    show () {\n      !this.fullscreen && !this.hideOverlay && this.genOverlay()\n      this.$nextTick(() => {\n        this.$refs.content.focus()\n        this.bind()\n      })\n    },\n    bind () {\n      window.addEventListener('focusin', this.onFocusin)\n    },\n    unbind () {\n      window.removeEventListener('focusin', this.onFocusin)\n    },\n    onClickOutside (e: Event) {\n      this.$emit('click:outside', e)\n\n      if (this.persistent) {\n        this.noClickAnimation || this.animateClick()\n      } else {\n        this.isActive = false\n      }\n    },\n    onKeydown (e: KeyboardEvent) {\n      if (e.keyCode === keyCodes.esc && !this.getOpenDependents().length) {\n        if (!this.persistent) {\n          this.isActive = false\n          const activator = this.getActivator()\n          this.$nextTick(() => activator && (activator as HTMLElement).focus())\n        } else if (!this.noClickAnimation) {\n          this.animateClick()\n        }\n      }\n      this.$emit('keydown', e)\n    },\n    // On focus change, wrap focus to stay inside the dialog\n    // https://github.com/vuetifyjs/vuetify/issues/6892\n    onFocusin (e: Event) {\n      if (!e || !this.retainFocus) return\n\n      const target = e.target as HTMLElement\n\n      if (\n        !!target &&\n        // It isn't the document or the dialog body\n        ![document, this.$refs.content].includes(target) &&\n        // It isn't inside the dialog body\n        !this.$refs.content.contains(target) &&\n        // We're the topmost dialog\n        this.activeZIndex >= this.getMaxZIndex() &&\n        // It isn't inside a dependent element (like a menu)\n        !this.getOpenDependentElements().some(el => el.contains(target))\n        // So we must have focused something outside the dialog and its children\n      ) {\n        // Find and focus the first available element inside the dialog\n        const focusable = this.$refs.content.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])')\n        focusable.length && (focusable[0] as HTMLElement).focus()\n      }\n    },\n    genContent () {\n      return this.showLazyContent(() => [\n        this.$createElement(VThemeProvider, {\n          props: {\n            root: true,\n            light: this.light,\n            dark: this.dark,\n          },\n        }, [\n          this.$createElement('div', {\n            class: this.contentClasses,\n            attrs: {\n              role: 'document',\n              tabindex: this.isActive ? 0 : undefined,\n              ...this.getScopeIdAttrs(),\n            },\n            on: { keydown: this.onKeydown },\n            style: { zIndex: this.activeZIndex },\n            ref: 'content',\n          }, [this.genTransition()]),\n        ]),\n      ])\n    },\n    genTransition () {\n      const content = this.genInnerContent()\n\n      if (!this.transition) return content\n\n      return this.$createElement('transition', {\n        props: {\n          name: this.transition,\n          origin: this.origin,\n          appear: true,\n        },\n      }, [content])\n    },\n    genInnerContent () {\n      const data = {\n        class: this.classes,\n        ref: 'dialog',\n        directives: [\n          {\n            name: 'click-outside',\n            value: this.onClickOutside,\n            args: {\n              closeConditional: this.closeConditional,\n              include: this.getOpenDependentElements,\n            },\n          },\n          { name: 'show', value: this.isActive },\n        ],\n        style: {},\n      }\n\n      if (!this.fullscreen) {\n        data.style = {\n          maxWidth: this.maxWidth === 'none' ? undefined : convertToUnit(this.maxWidth),\n          width: this.width === 'auto' ? undefined : convertToUnit(this.width),\n        }\n      }\n\n      return this.$createElement('div', data, this.getContentSlot())\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-dialog__container',\n      class: {\n        'v-dialog__container--attached':\n          this.attach === '' ||\n          this.attach === true ||\n          this.attach === 'attach',\n      },\n      attrs: { role: 'dialog' },\n    }, [\n      this.genActivator(),\n      this.genContent(),\n    ])\n  },\n})\n","import Vue from 'vue'\n\n/**\n * Delayable\n *\n * @mixin\n *\n * Changes the open or close delay time for elements\n */\nexport default Vue.extend<Vue & { isActive?: boolean }>().extend({\n  name: 'delayable',\n\n  props: {\n    openDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n    closeDelay: {\n      type: [Number, String],\n      default: 0,\n    },\n  },\n\n  data: () => ({\n    openTimeout: undefined as number | undefined,\n    closeTimeout: undefined as number | undefined,\n  }),\n\n  methods: {\n    /**\n     * Clear any pending delay timers from executing\n     */\n    clearDelay (): void {\n      clearTimeout(this.openTimeout)\n      clearTimeout(this.closeTimeout)\n    },\n    /**\n     * Runs callback after a specified delay\n     */\n    runDelay (type: 'open' | 'close', cb?: () => void): void {\n      this.clearDelay()\n\n      const delay = parseInt((this as any)[`${type}Delay`], 10)\n\n      ;(this as any)[`${type}Timeout`] = setTimeout(cb || (() => {\n        this.isActive = { open: true, close: false }[type]\n      }), delay)\n    },\n  },\n})\n","import Vue from 'vue'\n\nimport { getZIndex } from '../../util/helpers'\n\ninterface options extends Vue {\n  $refs: {\n    content: Element\n  }\n}\n\n/* @vue/component */\nexport default Vue.extend<options>().extend({\n  name: 'stackable',\n\n  data () {\n    return {\n      stackElement: null as Element | null,\n      stackExclude: null as Element[] | null,\n      stackMinZIndex: 0,\n      isActive: false,\n    }\n  },\n  computed: {\n    activeZIndex (): number {\n      if (typeof window === 'undefined') return 0\n\n      const content = this.stackElement || this.$refs.content\n      // Return current zindex if not active\n\n      const index = !this.isActive\n        ? getZIndex(content)\n        : this.getMaxZIndex(this.stackExclude || [content]) + 2\n\n      if (index == null) return index\n\n      // Return max current z-index (excluding self) + 2\n      // (2 to leave room for an overlay below, if needed)\n      return parseInt(index)\n    },\n  },\n  methods: {\n    getMaxZIndex (exclude: Element[] = []) {\n      const base = this.$el\n      // Start with lowest allowed z-index or z-index of\n      // base component's element, whichever is greater\n      const zis = [this.stackMinZIndex, getZIndex(base)]\n      // Convert the NodeList to an array to\n      // prevent an Edge bug with Symbol.iterator\n      // https://github.com/vuetifyjs/vuetify/issues/2146\n      const activeElements = [\n        ...document.getElementsByClassName('v-menu__content--active'),\n        ...document.getElementsByClassName('v-dialog__content--active'),\n      ]\n\n      // Get z-index for all active dialogs\n      for (let index = 0; index < activeElements.length; index++) {\n        if (!exclude.includes(activeElements[index])) {\n          zis.push(getZIndex(activeElements[index]))\n        }\n      }\n\n      return Math.max(...zis)\n    },\n  },\n})\n","// Mixins\nimport Delayable from '../delayable'\nimport Toggleable from '../toggleable'\n\n// Utilities\nimport mixins from '../../util/mixins'\nimport { getSlot, getSlotType } from '../../util/helpers'\nimport { consoleError } from '../../util/console'\n\n// Types\nimport { VNode, PropType } from 'vue'\n\nconst baseMixins = mixins(\n  Delayable,\n  Toggleable\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'activatable',\n\n  props: {\n    activator: {\n      default: null as unknown as PropType<string | HTMLElement | VNode | Element | null>,\n      validator: (val: string | object) => {\n        return ['string', 'object'].includes(typeof val)\n      },\n    },\n    disabled: Boolean,\n    internalActivator: Boolean,\n    openOnHover: Boolean,\n  },\n\n  data: () => ({\n    // Do not use this directly, call getActivator() instead\n    activatorElement: null as HTMLElement | null,\n    activatorNode: [] as VNode[],\n    events: ['click', 'mouseenter', 'mouseleave'],\n    listeners: {} as Record<string, (e: MouseEvent & KeyboardEvent) => void>,\n  }),\n\n  watch: {\n    activator: 'resetActivator',\n    openOnHover: 'resetActivator',\n  },\n\n  mounted () {\n    const slotType = getSlotType(this, 'activator', true)\n\n    if (slotType && ['v-slot', 'normal'].includes(slotType)) {\n      consoleError(`The activator slot must be bound, try '<template v-slot:activator=\"{ on }\"><v-btn v-on=\"on\">'`, this)\n    }\n\n    this.addActivatorEvents()\n  },\n\n  beforeDestroy () {\n    this.removeActivatorEvents()\n  },\n\n  methods: {\n    addActivatorEvents () {\n      if (\n        !this.activator ||\n        this.disabled ||\n        !this.getActivator()\n      ) return\n\n      this.listeners = this.genActivatorListeners()\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        this.getActivator()!.addEventListener(key, this.listeners[key] as any)\n      }\n    },\n    genActivator () {\n      const node = getSlot(this, 'activator', Object.assign(this.getValueProxy(), {\n        on: this.genActivatorListeners(),\n        attrs: this.genActivatorAttributes(),\n      })) || []\n\n      this.activatorNode = node\n\n      return node\n    },\n    genActivatorAttributes () {\n      return {\n        role: 'button',\n        'aria-haspopup': true,\n        'aria-expanded': String(this.isActive),\n      }\n    },\n    genActivatorListeners () {\n      if (this.disabled) return {}\n\n      const listeners: Record<string, (e: MouseEvent & KeyboardEvent) => void> = {}\n\n      if (this.openOnHover) {\n        listeners.mouseenter = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('open')\n        }\n        listeners.mouseleave = (e: MouseEvent) => {\n          this.getActivator(e)\n          this.runDelay('close')\n        }\n      } else {\n        listeners.click = (e: MouseEvent) => {\n          const activator = this.getActivator(e)\n          if (activator) activator.focus()\n\n          e.stopPropagation()\n\n          this.isActive = !this.isActive\n        }\n      }\n\n      return listeners\n    },\n    getActivator (e?: Event): HTMLElement | null {\n      // If we've already fetched the activator, re-use\n      if (this.activatorElement) return this.activatorElement\n\n      let activator = null\n\n      if (this.activator) {\n        const target = this.internalActivator ? this.$el : document\n\n        if (typeof this.activator === 'string') {\n          // Selector\n          activator = target.querySelector(this.activator)\n        } else if ((this.activator as any).$el) {\n          // Component (ref)\n          activator = (this.activator as any).$el\n        } else {\n          // HTMLElement | Element\n          activator = this.activator\n        }\n      } else if (this.activatorNode.length === 1 || (this.activatorNode.length && !e)) {\n        // Use the contents of the activator slot\n        // There's either only one element in it or we\n        // don't have a click event to use as a last resort\n        const vm = this.activatorNode[0].componentInstance\n        if (\n          vm &&\n          vm.$options.mixins && //                         Activatable is indirectly used via Menuable\n          vm.$options.mixins.some((m: any) => m.options && ['activatable', 'menuable'].includes(m.options.name))\n        ) {\n          // Activator is actually another activatible component, use its activator (#8846)\n          activator = (vm as any).getActivator()\n        } else {\n          activator = this.activatorNode[0].elm as HTMLElement\n        }\n      } else if (e) {\n        // Activated by a click event\n        activator = (e.currentTarget || e.target) as HTMLElement\n      }\n\n      this.activatorElement = activator\n\n      return this.activatorElement\n    },\n    getContentSlot () {\n      return getSlot(this, 'default', this.getValueProxy(), true)\n    },\n    getValueProxy (): object {\n      const self = this\n      return {\n        get value () {\n          return self.isActive\n        },\n        set value (isActive: boolean) {\n          self.isActive = isActive\n        },\n      }\n    },\n    removeActivatorEvents () {\n      if (\n        !this.activator ||\n        !this.activatorElement\n      ) return\n\n      const keys = Object.keys(this.listeners)\n\n      for (const key of keys) {\n        (this.activatorElement as any).removeEventListener(key, this.listeners[key])\n      }\n\n      this.listeners = {}\n    },\n    resetActivator () {\n      this.removeActivatorEvents()\n      this.activatorElement = null\n      this.getActivator()\n      this.addActivatorEvents()\n    },\n  },\n})\n","// Mixins\nimport Bootable from '../bootable'\n\n// Utilities\nimport { getObjectValueByPath } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue, { PropOptions } from 'vue'\nimport { VNode } from 'vue/types'\n\ninterface options extends Vue {\n  $el: HTMLElement\n  $refs: {\n    content: HTMLElement\n  }\n}\n\nfunction validateAttachTarget (val: any) {\n  const type = typeof val\n\n  if (type === 'boolean' || type === 'string') return true\n\n  return val.nodeType === Node.ELEMENT_NODE\n}\n\n/* @vue/component */\nexport default mixins<options &\n  /* eslint-disable indent */\n  ExtractVue<typeof Bootable>\n  /* eslint-enable indent */\n>(Bootable).extend({\n  name: 'detachable',\n\n  props: {\n    attach: {\n      default: false,\n      validator: validateAttachTarget,\n    } as PropOptions<boolean | string | Element>,\n    contentClass: {\n      type: String,\n      default: '',\n    },\n  },\n\n  data: () => ({\n    activatorNode: null as null | VNode | VNode[],\n    hasDetached: false,\n  }),\n\n  watch: {\n    attach () {\n      this.hasDetached = false\n      this.initDetach()\n    },\n    hasContent () {\n      this.$nextTick(this.initDetach)\n    },\n  },\n\n  beforeMount () {\n    this.$nextTick(() => {\n      if (this.activatorNode) {\n        const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n\n        activator.forEach(node => {\n          if (!node.elm) return\n          if (!this.$el.parentNode) return\n\n          const target = this.$el === this.$el.parentNode.firstChild\n            ? this.$el\n            : this.$el.nextSibling\n\n          this.$el.parentNode.insertBefore(node.elm, target)\n        })\n      }\n    })\n  },\n\n  mounted () {\n    this.hasContent && this.initDetach()\n  },\n\n  deactivated () {\n    this.isActive = false\n  },\n\n  beforeDestroy () {\n    // IE11 Fix\n    try {\n      if (\n        this.$refs.content &&\n        this.$refs.content.parentNode\n      ) {\n        this.$refs.content.parentNode.removeChild(this.$refs.content)\n      }\n\n      if (this.activatorNode) {\n        const activator = Array.isArray(this.activatorNode) ? this.activatorNode : [this.activatorNode]\n        activator.forEach(node => {\n          node.elm &&\n            node.elm.parentNode &&\n            node.elm.parentNode.removeChild(node.elm)\n        })\n      }\n    } catch (e) { console.log(e) }\n  },\n\n  methods: {\n    getScopeIdAttrs () {\n      const scopeId = getObjectValueByPath(this.$vnode, 'context.$options._scopeId')\n\n      return scopeId && {\n        [scopeId]: '',\n      }\n    },\n    initDetach () {\n      if (this._isDestroyed ||\n        !this.$refs.content ||\n        this.hasDetached ||\n        // Leave menu in place if attached\n        // and dev has not changed target\n        this.attach === '' || // If used as a boolean prop (<v-menu attach>)\n        this.attach === true || // If bound to a boolean (<v-menu :attach=\"true\">)\n        this.attach === 'attach' // If bound as boolean prop in pug (v-menu(attach))\n      ) return\n\n      let target\n      if (this.attach === false) {\n        // Default, detach to app\n        target = document.querySelector('[data-app]')\n      } else if (typeof this.attach === 'string') {\n        // CSS selector\n        target = document.querySelector(this.attach)\n      } else {\n        // DOM Element\n        target = this.attach\n      }\n\n      if (!target) {\n        consoleWarn(`Unable to locate target ${this.attach || '[data-app]'}`, this)\n        return\n      }\n\n      target.appendChild(this.$refs.content)\n\n      this.hasDetached = true\n    },\n  },\n})\n","import Vue from 'vue'\n\nimport mixins from '../../util/mixins'\nimport { VOverlay } from '../../components/VOverlay'\n\ninterface options extends Vue {\n  $el: HTMLElement\n  $refs: {\n    content: HTMLElement\n  }\n  overlay?: InstanceType<typeof VOverlay>\n}\n\ninterface DependentInstance extends Vue {\n  isActive?: boolean\n  isDependent?: boolean\n}\n\nfunction searchChildren (children: Vue[]): DependentInstance[] {\n  const results = []\n  for (let index = 0; index < children.length; index++) {\n    const child = children[index] as DependentInstance\n    if (child.isActive && child.isDependent) {\n      results.push(child)\n    } else {\n      results.push(...searchChildren(child.$children))\n    }\n  }\n\n  return results\n}\n\n/* @vue/component */\nexport default mixins<options>().extend({\n  name: 'dependent',\n\n  data () {\n    return {\n      closeDependents: true,\n      isActive: false,\n      isDependent: true,\n    }\n  },\n\n  watch: {\n    isActive (val) {\n      if (val) return\n\n      const openDependents = this.getOpenDependents()\n      for (let index = 0; index < openDependents.length; index++) {\n        openDependents[index].isActive = false\n      }\n    },\n  },\n\n  methods: {\n    getOpenDependents (): any[] {\n      if (this.closeDependents) return searchChildren(this.$children)\n\n      return []\n    },\n    getOpenDependentElements (): HTMLElement[] {\n      const result = []\n      const openDependents = this.getOpenDependents()\n\n      for (let index = 0; index < openDependents.length; index++) {\n        result.push(...openDependents[index].getClickableDependentElements())\n      }\n\n      return result\n    },\n    getClickableDependentElements (): HTMLElement[] {\n      const result = [this.$el]\n      if (this.$refs.content) result.push(this.$refs.content)\n      if (this.overlay) result.push(this.overlay.$el as HTMLElement)\n      result.push(...this.getOpenDependentElements())\n\n      return result\n    },\n  },\n})\n"],"sourceRoot":""}