{"version":3,"sources":["webpack:///../../../src/components/VExpansionPanel/VExpansionPanels.ts","webpack:///./src/views/FAQ.vue?4b6b","webpack:///./src/views/FAQ.vue","webpack:///./src/views/FAQ.vue?ca06","webpack:///./src/views/FAQ.vue?77d6","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelContent.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanelHeader.ts","webpack:///../../../src/components/VExpansionPanel/VExpansionPanel.ts"],"names":["name","provide","expansionPanels","this","props","accordion","disabled","flat","hover","focusable","inset","popout","readonly","tile","Boolean","computed","classes","created","$attrs","hasOwnProperty","Array","value","length","methods","updateItem","getValue","item","nextValue","index","toggleMethod","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","_v","_l","question","key","_s","answer","staticRenderFns","extend","data","questions","iconConfig","component","VCard","VCardSubtitle","VCardTitle","VExpansionPanel","VExpansionPanelContent","VExpansionPanelHeader","VExpansionPanels","VRow","baseMixins","isActive","expansionPanel","beforeDestroy","h","showLazyContent","directives","class","ripple","disableIconRotate","expandIcon","type","default","hideActions","hasMousedown","isDisabled","isReadonly","onClick","genIcon","icon","setBackgroundColor","tabindex","on","click","mousedown","mouseup","open","content","header","nextIsActive","groupClasses","registerContent","unregisterContent","registerHeader","vm","unregisterHeader","e","toggle","isBooted","String"],"mappings":"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","file":"js/chunk-69f3c528.8ebae161.js","sourcesContent":["// Styles\nimport './VExpansionPanel.sass'\n\n// Components\nimport { BaseItemGroup, GroupableInstance } from '../VItemGroup/VItemGroup'\nimport VExpansionPanel from './VExpansionPanel'\n\n// Utilities\nimport { breaking } from '../../util/console'\n\n// Types\ninterface VExpansionPanelInstance extends InstanceType<typeof VExpansionPanel> {}\n\n/* @vue/component */\nexport default BaseItemGroup.extend({\n  name: 'v-expansion-panels',\n\n  provide (): object {\n    return {\n      expansionPanels: this,\n    }\n  },\n\n  props: {\n    accordion: Boolean,\n    disabled: Boolean,\n    flat: Boolean,\n    hover: Boolean,\n    focusable: Boolean,\n    inset: Boolean,\n    popout: Boolean,\n    readonly: Boolean,\n    tile: Boolean,\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...BaseItemGroup.options.computed.classes.call(this),\n        'v-expansion-panels': true,\n        'v-expansion-panels--accordion': this.accordion,\n        'v-expansion-panels--flat': this.flat,\n        'v-expansion-panels--hover': this.hover,\n        'v-expansion-panels--focusable': this.focusable,\n        'v-expansion-panels--inset': this.inset,\n        'v-expansion-panels--popout': this.popout,\n        'v-expansion-panels--tile': this.tile,\n      }\n    },\n  },\n\n  created () {\n    /* istanbul ignore next */\n    if (this.$attrs.hasOwnProperty('expand')) {\n      breaking('expand', 'multiple', this)\n    }\n\n    /* istanbul ignore next */\n    if (\n      Array.isArray(this.value) &&\n      this.value.length > 0 &&\n      typeof this.value[0] === 'boolean'\n    ) {\n      breaking(':value=\"[true, false, true]\"', ':value=\"[0, 2]\"', this)\n    }\n  },\n\n  methods: {\n    updateItem (item: GroupableInstance & VExpansionPanelInstance, index: number) {\n      const value = this.getValue(item, index)\n      const nextValue = this.getValue(item, index + 1)\n\n      item.isActive = this.toggleMethod(value)\n      item.nextIsActive = this.toggleMethod(nextValue)\n    },\n  },\n})\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-card',{staticClass:\"pa-0 mx-auto\",attrs:{\"flat\":\"\",\"max-width\":\"500px\"}},[_c('v-card-title',{staticClass:\"wrap-text\"},[_vm._v(\"Frequently Asked Questions\")]),_c('v-card-subtitle',[_vm._v(\"Having a problem? See if your question is answered below.\")]),_c('v-row',{staticClass:\"px-2\",attrs:{\"justify\":\"center\"}},[_c('v-expansion-panels',{attrs:{\"accordion\":\"\",\"multiple\":\"\"}},_vm._l((_vm.questions),function(question,index){return _c('v-expansion-panel',{key:index},[_c('v-expansion-panel-header',[_c('b',[_vm._v(_vm._s(question.question))])]),_c('v-expansion-panel-content',[_vm._v(\" \"+_vm._s(question.answer)+\" \")])],1)}),1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport Vue from 'vue';\r\nimport iconConfig from '@/store/misc/icons';\r\n\r\nexport default Vue.extend({\r\n  name: 'FAQ',\r\n  data() {\r\n    return {\r\n      questions: [\r\n        {\r\n          question: 'Where is my data stored?',\r\n          answer: 'All information is being stored locally on the device, or more specifically, in the browser through which you are accessing the application. There is no data transfer between the server and the application containing user generated data in any form.'\r\n        },\r\n        {\r\n          question: 'Who can see my data?',\r\n          answer: 'Exchange of appreciation is only visible on the sending- and receiving userâ€™s device. Your contact details are only shared with the users that have previously exchanged appreciation with you.'\r\n        },\r\n        {\r\n          question: 'Why do you need my email address?',\r\n          answer: 'Your email address is required as form of unique identification when exchanging appreciation. The email address will not be verified as there is no communication to the server concerning personal data. So, for this prototype version, it is done in good faith that you fill out an email address that is unique to you.'\r\n        },\r\n        {\r\n          question: 'The app was not granted persistent storage in the setup, is this a problem?',\r\n          answer: 'It is not immediately a problem if no persistent storage is granted, but the browser might clear the data when your device is running out of storage. Please be cautious of this. You can check if anything changed by going to the Permissions section on the Settings page.'\r\n        },\r\n        {\r\n          question: 'I got a new device, how do I transfer my data?',\r\n          answer: 'It is not possible to transfer your local data to another device or browser as of this moment.'\r\n        },\r\n        {\r\n          question: 'I just switched browsers and all of my data is gone.',\r\n          answer: 'All of the application data is stored locally in the browser. This means that switching browsers, even on the same device, will force you to start fresh. Your data is still available on the old browser. When you delete the browser or its storage, all application data will be lost as well. '\r\n        },\r\n        {\r\n          question: 'I updated my profile. Why do other people still see the old profile?',\r\n          answer: 'Your profile update remains on your local device. Other people will receive this update during the next appreciation exchange. Make sure that the \\'Update contact details\\' box is checked when sending appreciation. This is under \\'Advanced options\\' when the QR code is shown.'\r\n        },\r\n        {\r\n          question: 'I am still in the browser and want to install the app. How do I do this?',\r\n          answer: 'You can access the installation instructions again through the Settings.'\r\n        },\r\n      ] ,\r\n      iconConfig\r\n    }\r\n  }\r\n});\r\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js??ref--20-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FAQ.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--14-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/ts-loader/index.js??ref--14-3!../../node_modules/vuetify-loader/lib/loader.js??ref--20-0!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FAQ.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./FAQ.vue?vue&type=template&id=4f5eb845&scoped=true&\"\nimport script from \"./FAQ.vue?vue&type=script&lang=ts&\"\nexport * from \"./FAQ.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"4f5eb845\",\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardSubtitle } from 'vuetify/lib/components/VCard';\nimport { VCardTitle } from 'vuetify/lib/components/VCard';\nimport { VExpansionPanel } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelContent } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanelHeader } from 'vuetify/lib/components/VExpansionPanel';\nimport { VExpansionPanels } from 'vuetify/lib/components/VExpansionPanel';\nimport { VRow } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VCard,VCardSubtitle,VCardTitle,VExpansionPanel,VExpansionPanelContent,VExpansionPanelHeader,VExpansionPanels,VRow})\n","// Components\nimport VExpansionPanel from './VExpansionPanel'\nimport { VExpandTransition } from '../transitions'\n\n// Mixins\nimport Bootable from '../../mixins/bootable'\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Bootable,\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-content', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\n/* @vue/component */\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-content',\n\n  computed: {\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerContent(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterContent()\n  },\n\n  render (h): VNode {\n    return h(VExpandTransition, this.showLazyContent(() => [\n      h('div', this.setBackgroundColor(this.color, {\n        staticClass: 'v-expansion-panel-content',\n        directives: [{\n          name: 'show',\n          value: this.isActive,\n        }],\n      }), [\n        h('div', { class: 'v-expansion-panel-content__wrap' }, getSlot(this)),\n      ]),\n    ]))\n  },\n})\n","// Components\nimport { VFadeTransition } from '../transitions'\nimport VExpansionPanel from './VExpansionPanel'\nimport VIcon from '../VIcon'\n\n// Mixins\nimport Colorable from '../../mixins/colorable'\nimport { inject as RegistrableInject } from '../../mixins/registrable'\n\n// Directives\nimport ripple from '../../directives/ripple'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins, { ExtractVue } from '../../util/mixins'\n\n// Types\nimport Vue, { VNode, VueConstructor } from 'vue'\n\nconst baseMixins = mixins(\n  Colorable,\n  RegistrableInject<'expansionPanel', VueConstructor<Vue>>('expansionPanel', 'v-expansion-panel-header', 'v-expansion-panel')\n)\n\ninterface options extends ExtractVue<typeof baseMixins> {\n  $el: HTMLElement\n  expansionPanel: InstanceType<typeof VExpansionPanel>\n}\n\nexport default baseMixins.extend<options>().extend({\n  name: 'v-expansion-panel-header',\n\n  directives: { ripple },\n\n  props: {\n    disableIconRotate: Boolean,\n    expandIcon: {\n      type: String,\n      default: '$expand',\n    },\n    hideActions: Boolean,\n    ripple: {\n      type: [Boolean, Object],\n      default: false,\n    },\n  },\n\n  data: () => ({\n    hasMousedown: false,\n  }),\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel-header--active': this.isActive,\n        'v-expansion-panel-header--mousedown': this.hasMousedown,\n      }\n    },\n    isActive (): boolean {\n      return this.expansionPanel.isActive\n    },\n    isDisabled (): boolean {\n      return this.expansionPanel.isDisabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanel.isReadonly\n    },\n  },\n\n  created () {\n    this.expansionPanel.registerHeader(this)\n  },\n\n  beforeDestroy () {\n    this.expansionPanel.unregisterHeader()\n  },\n\n  methods: {\n    onClick (e: MouseEvent) {\n      this.$emit('click', e)\n    },\n    genIcon () {\n      const icon = getSlot(this, 'actions') ||\n        [this.$createElement(VIcon, this.expandIcon)]\n\n      return this.$createElement(VFadeTransition, [\n        this.$createElement('div', {\n          staticClass: 'v-expansion-panel-header__icon',\n          class: {\n            'v-expansion-panel-header__icon--disable-rotate': this.disableIconRotate,\n          },\n          directives: [{\n            name: 'show',\n            value: !this.isDisabled,\n          }],\n        }, icon),\n      ])\n    },\n  },\n\n  render (h): VNode {\n    return h('button', this.setBackgroundColor(this.color, {\n      staticClass: 'v-expansion-panel-header',\n      class: this.classes,\n      attrs: {\n        tabindex: this.isDisabled ? -1 : null,\n        type: 'button',\n      },\n      directives: [{\n        name: 'ripple',\n        value: this.ripple,\n      }],\n      on: {\n        ...this.$listeners,\n        click: this.onClick,\n        mousedown: () => (this.hasMousedown = true),\n        mouseup: () => (this.hasMousedown = false),\n      },\n    }), [\n      getSlot(this, 'default', { open: this.isActive }, true),\n      this.hideActions || this.genIcon(),\n    ])\n  },\n})\n","// Components\nimport VExpansionPanels from './VExpansionPanels'\nimport VExpansionPanelHeader from './VExpansionPanelHeader'\nimport VExpansionPanelContent from './VExpansionPanelContent'\n\n// Mixins\nimport { factory as GroupableFactory } from '../../mixins/groupable'\nimport { provide as RegistrableProvide } from '../../mixins/registrable'\n\n// Utilities\nimport { getSlot } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\ntype VExpansionPanelHeaderInstance = InstanceType<typeof VExpansionPanelHeader>\ntype VExpansionPanelContentInstance = InstanceType<typeof VExpansionPanelContent>\n\nexport default mixins(\n  GroupableFactory<'expansionPanels', typeof VExpansionPanels>('expansionPanels', 'v-expansion-panel', 'v-expansion-panels'),\n  RegistrableProvide('expansionPanel', true)\n  /* @vue/component */\n).extend({\n  name: 'v-expansion-panel',\n\n  props: {\n    disabled: Boolean,\n    readonly: Boolean,\n  },\n\n  data () {\n    return {\n      content: null as VExpansionPanelContentInstance | null,\n      header: null as VExpansionPanelHeaderInstance | null,\n      nextIsActive: false,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        'v-expansion-panel--active': this.isActive,\n        'v-expansion-panel--next-active': this.nextIsActive,\n        'v-expansion-panel--disabled': this.isDisabled,\n        ...this.groupClasses,\n      }\n    },\n    isDisabled (): boolean {\n      return this.expansionPanels.disabled || this.disabled\n    },\n    isReadonly (): boolean {\n      return this.expansionPanels.readonly || this.readonly\n    },\n  },\n\n  methods: {\n    registerContent (vm: VExpansionPanelContentInstance) {\n      this.content = vm\n    },\n    unregisterContent () {\n      this.content = null\n    },\n    registerHeader (vm: VExpansionPanelHeaderInstance) {\n      this.header = vm\n      vm.$on('click', this.onClick)\n    },\n    unregisterHeader () {\n      this.header = null\n    },\n    onClick (e: MouseEvent) {\n      if (e.detail) this.header!.$el.blur()\n\n      this.$emit('click', e)\n\n      this.isReadonly || this.isDisabled || this.toggle()\n    },\n    toggle () {\n      /* istanbul ignore else */\n      if (this.content) this.content.isBooted = true\n      this.$nextTick(() => this.$emit('change'))\n    },\n  },\n\n  render (h): VNode {\n    return h('div', {\n      staticClass: 'v-expansion-panel',\n      class: this.classes,\n      attrs: {\n        'aria-expanded': String(this.isActive),\n      },\n    }, getSlot(this))\n  },\n})\n"],"sourceRoot":""}